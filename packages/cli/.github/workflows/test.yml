name: CLI Tests

on:
  push:
    branches: [main, develop]
    paths:
      - 'packages/cli/**'
      - '.github/workflows/cli-test.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'packages/cli/**'
      - '.github/workflows/cli-test.yml'

jobs:
  test:
    name: Test CLI
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node: [20, 22]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'bun'

      - name: Install dependencies
        working-directory: packages/cli
        run: bun install --frozen-lockfile

      - name: Build CLI
        working-directory: packages/cli
        run: bun run build

      - name: Run type checks
        working-directory: packages/cli
        run: bun run type-check

      - name: Run linting
        working-directory: packages/cli
        run: bun run lint

      - name: Run unit tests
        working-directory: packages/cli
        run: bun run test:unit

      - name: Run integration tests
        working-directory: packages/cli
        run: bun run test:integration
        env:
          CI: true

      - name: Run command tests
        working-directory: packages/cli
        run: bun run test:commands
        if: matrix.os != 'windows-latest' # Skip on Windows due to shell differences

      - name: Upload test report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-report-${{ matrix.os }}-node${{ matrix.node }}
          path: packages/cli/test-report.json

  coverage:
    name: Test Coverage
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'bun'

      - name: Install dependencies
        working-directory: packages/cli
        run: bun install --frozen-lockfile

      - name: Build CLI
        working-directory: packages/cli
        run: bun run build

      - name: Run tests with coverage
        working-directory: packages/cli
        run: bun test --coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./packages/cli/coverage/lcov.info
          flags: cli
          name: cli-coverage
          token: ${{ secrets.CODECOV_TOKEN }}