/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */
import {
  combineCodec,
  getDiscriminatedUnionDecoder,
  getDiscriminatedUnionEncoder,
  getStructDecoder,
  getStructEncoder,
  getTupleDecoder,
  getTupleEncoder,
  getU8Decoder,
  getU8Encoder,
  getUnitDecoder,
  getUnitEncoder,
} from '@solana/kit';
export function getMessageTypeEncoder() {
  return getDiscriminatedUnionEncoder([
    ['Text', getUnitEncoder()],
    ['Data', getUnitEncoder()],
    ['Command', getUnitEncoder()],
    ['Response', getUnitEncoder()],
    [
      'Custom',
      getStructEncoder([['fields', getTupleEncoder([getU8Encoder()])]]),
    ],
  ]);
}
export function getMessageTypeDecoder() {
  return getDiscriminatedUnionDecoder([
    ['Text', getUnitDecoder()],
    ['Data', getUnitDecoder()],
    ['Command', getUnitDecoder()],
    ['Response', getUnitDecoder()],
    [
      'Custom',
      getStructDecoder([['fields', getTupleDecoder([getU8Decoder()])]]),
    ],
  ]);
}
export function getMessageTypeCodec() {
  return combineCodec(getMessageTypeEncoder(), getMessageTypeDecoder());
}
export function messageType(kind, data) {
  return Array.isArray(data)
    ? { __kind: kind, fields: data }
    : { __kind: kind, ...(data ?? {}) };
}
export function isMessageType(kind, value) {
  return value.__kind === kind;
}
//# sourceMappingURL=messageType.js.map
