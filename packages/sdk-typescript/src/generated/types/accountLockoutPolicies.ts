/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getArrayDecoder,
  getArrayEncoder,
  getBooleanDecoder,
  getBooleanEncoder,
  getI64Decoder,
  getI64Encoder,
  getStructDecoder,
  getStructEncoder,
  getU8Decoder,
  getU8Encoder,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';
import {
  getNotificationRequirementDecoder,
  getNotificationRequirementEncoder,
  getUnlockMethodDecoder,
  getUnlockMethodEncoder,
  type NotificationRequirement,
  type NotificationRequirementArgs,
  type UnlockMethod,
  type UnlockMethodArgs,
} from '.';

/** Account lockout policies */
export interface AccountLockoutPolicies {
  /** Max failed attempts before lockout */
  maxFailedAttempts: number;
  /** Lockout duration */
  lockoutDuration: bigint;
  /** Progressive lockout enabled */
  progressiveLockout: boolean;
  /** Unlock methods */
  unlockMethods: UnlockMethod[];
  /** Notification requirements */
  notificationRequirements: NotificationRequirement[];
}

export interface AccountLockoutPoliciesArgs {
  /** Max failed attempts before lockout */
  maxFailedAttempts: number;
  /** Lockout duration */
  lockoutDuration: number | bigint;
  /** Progressive lockout enabled */
  progressiveLockout: boolean;
  /** Unlock methods */
  unlockMethods: UnlockMethodArgs[];
  /** Notification requirements */
  notificationRequirements: NotificationRequirementArgs[];
}

export function getAccountLockoutPoliciesEncoder(): Encoder<AccountLockoutPoliciesArgs> {
  return getStructEncoder([
    ['maxFailedAttempts', getU8Encoder()],
    ['lockoutDuration', getI64Encoder()],
    ['progressiveLockout', getBooleanEncoder()],
    ['unlockMethods', getArrayEncoder(getUnlockMethodEncoder())],
    [
      'notificationRequirements',
      getArrayEncoder(getNotificationRequirementEncoder()),
    ],
  ]);
}

export function getAccountLockoutPoliciesDecoder(): Decoder<AccountLockoutPolicies> {
  return getStructDecoder([
    ['maxFailedAttempts', getU8Decoder()],
    ['lockoutDuration', getI64Decoder()],
    ['progressiveLockout', getBooleanDecoder()],
    ['unlockMethods', getArrayDecoder(getUnlockMethodDecoder())],
    [
      'notificationRequirements',
      getArrayDecoder(getNotificationRequirementDecoder()),
    ],
  ]);
}

export function getAccountLockoutPoliciesCodec(): Codec<
  AccountLockoutPoliciesArgs,
  AccountLockoutPolicies
> {
  return combineCodec(
    getAccountLockoutPoliciesEncoder(),
    getAccountLockoutPoliciesDecoder()
  );
}
