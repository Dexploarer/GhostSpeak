/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  getArrayDecoder,
  getArrayEncoder,
  getStructDecoder,
  getStructEncoder,
  getTupleDecoder,
  getTupleEncoder,
  getUtf8Decoder,
  getUtf8Encoder,
  getU32Decoder,
  getU32Encoder,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';

/** Simplified Action structure to avoid circular dependencies */
export type Action = {
  /** Action name */
  name: string;
  /** Action type (enum index) */
  actionType: number;
  /** Action parameters */
  parameters: Array<readonly [string, string]>;
};

export type ActionArgs = Action;

export function getActionEncoder(): Encoder<ActionArgs> {
  return getStructEncoder([
    ['name', addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())],
    ['actionType', getU32Encoder()],
    [
      'parameters',
      getArrayEncoder(
        getTupleEncoder([
          addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder()),
          addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder()),
        ])
      ),
    ],
  ]);
}

export function getActionDecoder(): Decoder<Action> {
  return getStructDecoder([
    ['name', addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())],
    ['actionType', getU32Decoder()],
    [
      'parameters',
      getArrayDecoder(
        getTupleDecoder([
          addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder()),
          addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder()),
        ])
      ),
    ],
  ]);
}

export function getActionCodec(): Codec<ActionArgs, Action> {
  return combineCodec(getActionEncoder(), getActionDecoder());
}