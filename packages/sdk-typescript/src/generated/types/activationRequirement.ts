/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getArrayDecoder,
  getArrayEncoder,
  getI64Decoder,
  getI64Encoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  getU8Decoder,
  getU8Encoder,
  getUtf8Decoder,
  getUtf8Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';
import {
  getActivationRequirementTypeDecoder,
  getActivationRequirementTypeEncoder,
  type ActivationRequirementType,
  type ActivationRequirementTypeArgs,
} from '.';

/** Role activation requirements */
export type ActivationRequirement = {
  /** Requirement type */
  requirementType: ActivationRequirementType;
  /** Required approvers */
  approvers: Array<Address>;
  /** Minimum approvals needed */
  minApprovals: number;
  /** Approval timeout */
  approvalTimeout: bigint;
  /** Evidence requirements */
  evidenceRequirements: Array<string>;
};

export type ActivationRequirementArgs = {
  /** Requirement type */
  requirementType: ActivationRequirementTypeArgs;
  /** Required approvers */
  approvers: Array<Address>;
  /** Minimum approvals needed */
  minApprovals: number;
  /** Approval timeout */
  approvalTimeout: number | bigint;
  /** Evidence requirements */
  evidenceRequirements: Array<string>;
};

export function getActivationRequirementEncoder(): Encoder<ActivationRequirementArgs> {
  return getStructEncoder([
    ['requirementType', getActivationRequirementTypeEncoder()],
    ['approvers', getArrayEncoder(getAddressEncoder())],
    ['minApprovals', getU8Encoder()],
    ['approvalTimeout', getI64Encoder()],
    [
      'evidenceRequirements',
      getArrayEncoder(addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())),
    ],
  ]);
}

export function getActivationRequirementDecoder(): Decoder<ActivationRequirement> {
  return getStructDecoder([
    ['requirementType', getActivationRequirementTypeDecoder()],
    ['approvers', getArrayDecoder(getAddressDecoder())],
    ['minApprovals', getU8Decoder()],
    ['approvalTimeout', getI64Decoder()],
    [
      'evidenceRequirements',
      getArrayDecoder(addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())),
    ],
  ]);
}

export function getActivationRequirementCodec(): Codec<
  ActivationRequirementArgs,
  ActivationRequirement
> {
  return combineCodec(
    getActivationRequirementEncoder(),
    getActivationRequirementDecoder()
  );
}
