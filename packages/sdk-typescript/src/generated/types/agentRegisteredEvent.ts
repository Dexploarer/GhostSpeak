import {
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  type Codec,
  type Decoder,
  type Encoder
} from '@solana/codecs-core';
import {
  getUtf8Decoder,
  getUtf8Encoder
} from '@solana/codecs-strings';
import {
  getI64Decoder,
  getI64Encoder,
  getU32Decoder,
  getU32Encoder
} from '@solana/codecs-numbers';
import {
  getStructDecoder,
  getStructEncoder
} from '@solana/codecs-data-structures';
import {
  getAddressDecoder,
  getAddressEncoder,
  type Address
} from '@solana/addresses';
/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

export type AgentRegisteredEvent = {
  agent: Address;
  owner: Address;
  name: string;
  timestamp: bigint;
};

export type AgentRegisteredEventArgs = {
  agent: Address;
  owner: Address;
  name: string;
  timestamp: number | bigint;
};

export function getAgentRegisteredEventEncoder(): Encoder<AgentRegisteredEventArgs> {
  return getStructEncoder([
    ['agent', getAddressEncoder()],
    ['owner', getAddressEncoder()],
    ['name', addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())],
    ['timestamp', getI64Encoder()],
  ]);
}

export function getAgentRegisteredEventDecoder(): Decoder<AgentRegisteredEvent> {
  return getStructDecoder([
    ['agent', getAddressDecoder()],
    ['owner', getAddressDecoder()],
    ['name', addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())],
    ['timestamp', getI64Decoder()],
  ]);
}

export function getAgentRegisteredEventCodec(): Codec<
  AgentRegisteredEventArgs,
  AgentRegisteredEvent
> {
  return combineCodec(
    getAgentRegisteredEventEncoder(),
    getAgentRegisteredEventDecoder()
  );
}
