/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getI64Decoder,
  getI64Encoder,
  getStructDecoder,
  getStructEncoder,
  type Address,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
} from '@solana/kit';

export type ArbitratorAssignedEvent = {
  dispute: Address;
  arbitrator: Address;
  assignedBy: Address;
  timestamp: bigint;
};

export type ArbitratorAssignedEventArgs = {
  dispute: Address;
  arbitrator: Address;
  assignedBy: Address;
  timestamp: number | bigint;
};

export function getArbitratorAssignedEventEncoder(): FixedSizeEncoder<ArbitratorAssignedEventArgs> {
  return getStructEncoder([
    ['dispute', getAddressEncoder()],
    ['arbitrator', getAddressEncoder()],
    ['assignedBy', getAddressEncoder()],
    ['timestamp', getI64Encoder()],
  ]);
}

export function getArbitratorAssignedEventDecoder(): FixedSizeDecoder<ArbitratorAssignedEvent> {
  return getStructDecoder([
    ['dispute', getAddressDecoder()],
    ['arbitrator', getAddressDecoder()],
    ['assignedBy', getAddressDecoder()],
    ['timestamp', getI64Decoder()],
  ]);
}

export function getArbitratorAssignedEventCodec(): FixedSizeCodec<
  ArbitratorAssignedEventArgs,
  ArbitratorAssignedEvent
> {
  return combineCodec(
    getArbitratorAssignedEventEncoder(),
    getArbitratorAssignedEventDecoder()
  );
}
