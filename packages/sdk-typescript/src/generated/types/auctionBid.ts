import {
  combineCodec,
  type Codec,
  type Decoder,
  type Encoder
} from '@solana/codecs-core';
import {
  getI64Decoder,
  getI64Encoder,
  getU64Decoder,
  getU64Encoder
} from '@solana/codecs-numbers';
import {
  getBooleanDecoder,
  getBooleanEncoder,
  getStructDecoder,
  getStructEncoder
} from '@solana/codecs-data-structures';
import {
  getAddressDecoder,
  getAddressEncoder,
  type Address
} from '@solana/addresses';
/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

export type AuctionBid = {
  bidder: Address;
  amount: bigint;
  timestamp: bigint;
  isWinning: boolean;
};

export type AuctionBidArgs = {
  bidder: Address;
  amount: number | bigint;
  timestamp: number | bigint;
  isWinning: boolean;
};

export function getAuctionBidEncoder(): Encoder<AuctionBidArgs> {
  return getStructEncoder([
    ['bidder', getAddressEncoder()],
    ['amount', getU64Encoder()],
    ['timestamp', getI64Encoder()],
    ['isWinning', getBooleanEncoder()],
  ]);
}

export function getAuctionBidDecoder(): Decoder<AuctionBid> {
  return getStructDecoder([
    ['bidder', getAddressDecoder()],
    ['amount', getU64Decoder()],
    ['timestamp', getI64Decoder()],
    ['isWinning', getBooleanDecoder()],
  ]);
}

export function getAuctionBidCodec(): Codec<AuctionBidArgs, AuctionBid> {
  return combineCodec(getAuctionBidEncoder(), getAuctionBidDecoder());
}
