/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getOptionDecoder,
  getOptionEncoder,
  getStringDecoder,
  getStringEncoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  getU8Decoder,
  getU8Encoder,
  type Codec,
  type Decoder,
  type Encoder,
  type Option,
  type OptionOrNullable,
} from '@solana/kit';

export type AuditContext = {
  /** Transaction signature */
  transactionSignature: Option<string>;
  /** Block number */
  blockNumber: Option<bigint>;
  /** IP address (if available) */
  ipAddress: Option<string>;
  /** User agent string */
  userAgent: Option<string>;
  /** Geographic location */
  geoLocation: Option<string>;
  /** Session ID */
  sessionId: Option<string>;
  /** Risk score at time of action */
  riskScore: number;
  /** Additional metadata as JSON string */
  metadata: Option<string>;
};

export type AuditContextArgs = {
  /** Transaction signature */
  transactionSignature: OptionOrNullable<string>;
  /** Block number */
  blockNumber: OptionOrNullable<bigint>;
  /** IP address (if available) */
  ipAddress: OptionOrNullable<string>;
  /** User agent string */
  userAgent: OptionOrNullable<string>;
  /** Geographic location */
  geoLocation: OptionOrNullable<string>;
  /** Session ID */
  sessionId: OptionOrNullable<string>;
  /** Risk score at time of action */
  riskScore: number;
  /** Additional metadata as JSON string */
  metadata: OptionOrNullable<string>;
};

export function getAuditContextEncoder(): Encoder<AuditContextArgs> {
  return getStructEncoder([
    ['transactionSignature', getOptionEncoder(getStringEncoder())],
    ['blockNumber', getOptionEncoder(getU64Encoder())],
    ['ipAddress', getOptionEncoder(getStringEncoder())],
    ['userAgent', getOptionEncoder(getStringEncoder())],
    ['geoLocation', getOptionEncoder(getStringEncoder())],
    ['sessionId', getOptionEncoder(getStringEncoder())],
    ['riskScore', getU8Encoder()],
    ['metadata', getOptionEncoder(getStringEncoder())],
  ]);
}

export function getAuditContextDecoder(): Decoder<AuditContext> {
  return getStructDecoder([
    ['transactionSignature', getOptionDecoder(getStringDecoder())],
    ['blockNumber', getOptionDecoder(getU64Decoder())],
    ['ipAddress', getOptionDecoder(getStringDecoder())],
    ['userAgent', getOptionDecoder(getStringDecoder())],
    ['geoLocation', getOptionDecoder(getStringDecoder())],
    ['sessionId', getOptionDecoder(getStringDecoder())],
    ['riskScore', getU8Decoder()],
    ['metadata', getOptionDecoder(getStringDecoder())],
  ]);
}

export function getAuditContextCodec(): Codec<AuditContextArgs, AuditContext> {
  return combineCodec(getAuditContextEncoder(), getAuditContextDecoder());
}