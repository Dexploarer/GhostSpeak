/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  getStructDecoder,
  getStructEncoder,
  getUtf8Decoder,
  getUtf8Encoder,
  getU32Decoder,
  getU32Encoder,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';

/** Audit context information */
export type AuditContext = {
  /** The identifier of the user or entity */
  userId: string;
  /** The session identifier */
  sessionId: string;
  /** The IP address or network location */
  ipAddress: string;
  /** Additional metadata */
  metadata: string;
};

export type AuditContextArgs = AuditContext;

export function getAuditContextEncoder(): Encoder<AuditContextArgs> {
  return getStructEncoder([
    ['userId', addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())],
    ['sessionId', addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())],
    ['ipAddress', addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())],
    ['metadata', addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())],
  ]);
}

export function getAuditContextDecoder(): Decoder<AuditContext> {
  return getStructDecoder([
    ['userId', addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())],
    ['sessionId', addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())],
    ['ipAddress', addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())],
    ['metadata', addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())],
  ]);
}

export function getAuditContextCodec(): Codec<AuditContextArgs, AuditContext> {
  return combineCodec(getAuditContextEncoder(), getAuditContextDecoder());
}