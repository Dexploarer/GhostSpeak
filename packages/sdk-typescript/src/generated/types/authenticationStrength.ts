/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getArrayDecoder,
  getArrayEncoder,
  getBooleanDecoder,
  getBooleanEncoder,
  getStructDecoder,
  getStructEncoder,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';
import {
  getAuthenticationLevelDecoder,
  getAuthenticationLevelEncoder,
  getStepUpTriggerDecoder,
  getStepUpTriggerEncoder,
  type AuthenticationLevel,
  type AuthenticationLevelArgs,
  type StepUpTrigger,
  type StepUpTriggerArgs,
} from '.';

/** Authentication strength requirements */
export interface AuthenticationStrength {
  /** Minimum authentication level */
  minimumLevel: AuthenticationLevel;
  /** Risk-based authentication */
  riskBased: boolean;
  /** Adaptive authentication */
  adaptive: boolean;
  /** Step-up authentication triggers */
  stepUpTriggers: StepUpTrigger[];
}

export interface AuthenticationStrengthArgs {
  /** Minimum authentication level */
  minimumLevel: AuthenticationLevelArgs;
  /** Risk-based authentication */
  riskBased: boolean;
  /** Adaptive authentication */
  adaptive: boolean;
  /** Step-up authentication triggers */
  stepUpTriggers: StepUpTriggerArgs[];
}

export function getAuthenticationStrengthEncoder(): Encoder<AuthenticationStrengthArgs> {
  return getStructEncoder([
    ['minimumLevel', getAuthenticationLevelEncoder()],
    ['riskBased', getBooleanEncoder()],
    ['adaptive', getBooleanEncoder()],
    ['stepUpTriggers', getArrayEncoder(getStepUpTriggerEncoder())],
  ]);
}

export function getAuthenticationStrengthDecoder(): Decoder<AuthenticationStrength> {
  return getStructDecoder([
    ['minimumLevel', getAuthenticationLevelDecoder()],
    ['riskBased', getBooleanDecoder()],
    ['adaptive', getBooleanDecoder()],
    ['stepUpTriggers', getArrayDecoder(getStepUpTriggerDecoder())],
  ]);
}

export function getAuthenticationStrengthCodec(): Codec<
  AuthenticationStrengthArgs,
  AuthenticationStrength
> {
  return combineCodec(
    getAuthenticationStrengthEncoder(),
    getAuthenticationStrengthDecoder()
  );
}
