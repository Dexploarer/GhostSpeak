/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getAddressDecoder,
  getAddressEncoder,
  getBytesDecoder,
  getBytesEncoder,
  getI64Decoder,
  getI64Encoder,
  getStructDecoder,
  getStructEncoder,
  type Address,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
  type ReadonlyUint8Array,
} from '@solana/kit';

/** Events */
export type BidCommittedEvent = {
  auction: Address;
  bidder: Address;
  commitmentHash: ReadonlyUint8Array;
  timestamp: bigint;
};

export type BidCommittedEventArgs = {
  auction: Address;
  bidder: Address;
  commitmentHash: ReadonlyUint8Array;
  timestamp: number | bigint;
};

export function getBidCommittedEventEncoder(): FixedSizeEncoder<BidCommittedEventArgs> {
  return getStructEncoder([
    ['auction', getAddressEncoder()],
    ['bidder', getAddressEncoder()],
    ['commitmentHash', fixEncoderSize(getBytesEncoder(), 32)],
    ['timestamp', getI64Encoder()],
  ]);
}

export function getBidCommittedEventDecoder(): FixedSizeDecoder<BidCommittedEvent> {
  return getStructDecoder([
    ['auction', getAddressDecoder()],
    ['bidder', getAddressDecoder()],
    ['commitmentHash', fixDecoderSize(getBytesDecoder(), 32)],
    ['timestamp', getI64Decoder()],
  ]);
}

export function getBidCommittedEventCodec(): FixedSizeCodec<
  BidCommittedEventArgs,
  BidCommittedEvent
> {
  return combineCodec(
    getBidCommittedEventEncoder(),
    getBidCommittedEventDecoder()
  );
}
