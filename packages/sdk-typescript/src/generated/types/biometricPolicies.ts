/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getArrayDecoder,
  getArrayEncoder,
  getBooleanDecoder,
  getBooleanEncoder,
  getStructDecoder,
  getStructEncoder,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';
import {
  getBiometricProtectionDecoder,
  getBiometricProtectionEncoder,
  getBiometricQualityDecoder,
  getBiometricQualityEncoder,
  getBiometricTypeDecoder,
  getBiometricTypeEncoder,
  type BiometricProtection,
  type BiometricProtectionArgs,
  type BiometricQuality,
  type BiometricQualityArgs,
  type BiometricType,
  type BiometricTypeArgs,
} from '.';

/** Biometric authentication policies */
export type BiometricPolicies = {
  /** Supported biometric types */
  supportedTypes: Array<BiometricType>;
  /** Biometric quality requirements */
  qualityRequirements: BiometricQuality;
  /** Liveness detection required */
  livenessDetection: boolean;
  /** Biometric template protection */
  templateProtection: BiometricProtection;
};

export type BiometricPoliciesArgs = {
  /** Supported biometric types */
  supportedTypes: Array<BiometricTypeArgs>;
  /** Biometric quality requirements */
  qualityRequirements: BiometricQualityArgs;
  /** Liveness detection required */
  livenessDetection: boolean;
  /** Biometric template protection */
  templateProtection: BiometricProtectionArgs;
};

export function getBiometricPoliciesEncoder(): Encoder<BiometricPoliciesArgs> {
  return getStructEncoder([
    ['supportedTypes', getArrayEncoder(getBiometricTypeEncoder())],
    ['qualityRequirements', getBiometricQualityEncoder()],
    ['livenessDetection', getBooleanEncoder()],
    ['templateProtection', getBiometricProtectionEncoder()],
  ]);
}

export function getBiometricPoliciesDecoder(): Decoder<BiometricPolicies> {
  return getStructDecoder([
    ['supportedTypes', getArrayDecoder(getBiometricTypeDecoder())],
    ['qualityRequirements', getBiometricQualityDecoder()],
    ['livenessDetection', getBooleanDecoder()],
    ['templateProtection', getBiometricProtectionDecoder()],
  ]);
}

export function getBiometricPoliciesCodec(): Codec<
  BiometricPoliciesArgs,
  BiometricPolicies
> {
  return combineCodec(
    getBiometricPoliciesEncoder(),
    getBiometricPoliciesDecoder()
  );
}
