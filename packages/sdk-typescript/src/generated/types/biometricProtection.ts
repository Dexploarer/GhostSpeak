/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getArrayDecoder,
  getArrayEncoder,
  getBooleanDecoder,
  getBooleanEncoder,
  getStructDecoder,
  getStructEncoder,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';
import {
  getAgingPolicyDecoder,
  getAgingPolicyEncoder,
  getBiometricStorageMethodDecoder,
  getBiometricStorageMethodEncoder,
  type AgingPolicy,
  type AgingPolicyArgs,
  type BiometricStorageMethod,
  type BiometricStorageMethodArgs,
} from '.';

/** Biometric template protection */
export type BiometricProtection = {
  /** Template encryption required */
  encryptionRequired: boolean;
  /** Template storage method */
  storageMethod: BiometricStorageMethod;
  /** Template revocation support */
  revocationSupport: boolean;
  /** Template aging policies */
  agingPolicies: Array<AgingPolicy>;
};

export type BiometricProtectionArgs = {
  /** Template encryption required */
  encryptionRequired: boolean;
  /** Template storage method */
  storageMethod: BiometricStorageMethodArgs;
  /** Template revocation support */
  revocationSupport: boolean;
  /** Template aging policies */
  agingPolicies: Array<AgingPolicyArgs>;
};

export function getBiometricProtectionEncoder(): Encoder<BiometricProtectionArgs> {
  return getStructEncoder([
    ['encryptionRequired', getBooleanEncoder()],
    ['storageMethod', getBiometricStorageMethodEncoder()],
    ['revocationSupport', getBooleanEncoder()],
    ['agingPolicies', getArrayEncoder(getAgingPolicyEncoder())],
  ]);
}

export function getBiometricProtectionDecoder(): Decoder<BiometricProtection> {
  return getStructDecoder([
    ['encryptionRequired', getBooleanDecoder()],
    ['storageMethod', getBiometricStorageMethodDecoder()],
    ['revocationSupport', getBooleanDecoder()],
    ['agingPolicies', getArrayDecoder(getAgingPolicyDecoder())],
  ]);
}

export function getBiometricProtectionCodec(): Codec<
  BiometricProtectionArgs,
  BiometricProtection
> {
  return combineCodec(
    getBiometricProtectionEncoder(),
    getBiometricProtectionDecoder()
  );
}
