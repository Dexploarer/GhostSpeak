/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  getArrayDecoder,
  getArrayEncoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  getUtf8Decoder,
  getUtf8Encoder,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';

export interface CompliancePolicies {
  frameworks: string[];
  auditRequirements: string[];
  reportingRequirements: string[];
}

export type CompliancePoliciesArgs = CompliancePolicies;

export function getCompliancePoliciesEncoder(): Encoder<CompliancePoliciesArgs> {
  return getStructEncoder([
    [
      'frameworks',
      getArrayEncoder(addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())),
    ],
    [
      'auditRequirements',
      getArrayEncoder(addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())),
    ],
    [
      'reportingRequirements',
      getArrayEncoder(addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())),
    ],
  ]);
}

export function getCompliancePoliciesDecoder(): Decoder<CompliancePolicies> {
  return getStructDecoder([
    [
      'frameworks',
      getArrayDecoder(addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())),
    ],
    [
      'auditRequirements',
      getArrayDecoder(addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())),
    ],
    [
      'reportingRequirements',
      getArrayDecoder(addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())),
    ],
  ]);
}

export function getCompliancePoliciesCodec(): Codec<
  CompliancePoliciesArgs,
  CompliancePolicies
> {
  return combineCodec(
    getCompliancePoliciesEncoder(),
    getCompliancePoliciesDecoder()
  );
}
