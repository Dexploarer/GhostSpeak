/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getArrayDecoder,
  getArrayEncoder,
  getI64Decoder,
  getI64Encoder,
  getStructDecoder,
  getStructEncoder,
  getU8Decoder,
  getU8Encoder,
  getUtf8Decoder,
  getUtf8Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';
import {
  getRiskAssessmentDecoder,
  getRiskAssessmentEncoder,
  getViolationSeverityDecoder,
  getViolationSeverityEncoder,
  type RiskAssessment,
  type RiskAssessmentArgs,
  type ViolationSeverity,
  type ViolationSeverityArgs,
} from '.';

export type ComplianceStatus = {
  /** Overall compliance score (0-100) */
  complianceScore: number;
  /** Last compliance review timestamp */
  lastReview: bigint;
  /** Next scheduled review */
  nextReview: bigint;
  /** Active compliance violations */
  activeViolations: Array<ViolationSeverity>;
  /** Regulatory status flags */
  regulatoryStatus: Array<string>;
  /** Risk assessment */
  riskAssessment: RiskAssessment;
  /** Compliance officers */
  complianceOfficers: Array<Address>;
};

export type ComplianceStatusArgs = {
  /** Overall compliance score (0-100) */
  complianceScore: number;
  /** Last compliance review timestamp */
  lastReview: number | bigint;
  /** Next scheduled review */
  nextReview: number | bigint;
  /** Active compliance violations */
  activeViolations: Array<ViolationSeverityArgs>;
  /** Regulatory status flags */
  regulatoryStatus: Array<string>;
  /** Risk assessment */
  riskAssessment: RiskAssessmentArgs;
  /** Compliance officers */
  complianceOfficers: Array<Address>;
};

export function getComplianceStatusEncoder(): Encoder<ComplianceStatusArgs> {
  return getStructEncoder([
    ['complianceScore', getU8Encoder()],
    ['lastReview', getI64Encoder()],
    ['nextReview', getI64Encoder()],
    ['activeViolations', getArrayEncoder(getViolationSeverityEncoder())],
    ['regulatoryStatus', getArrayEncoder(getUtf8Encoder())],
    ['riskAssessment', getRiskAssessmentEncoder()],
    ['complianceOfficers', getArrayEncoder(getAddressEncoder())],
  ]);
}

export function getComplianceStatusDecoder(): Decoder<ComplianceStatus> {
  return getStructDecoder([
    ['complianceScore', getU8Decoder()],
    ['lastReview', getI64Decoder()],
    ['nextReview', getI64Decoder()],
    ['activeViolations', getArrayDecoder(getViolationSeverityDecoder())],
    ['regulatoryStatus', getArrayDecoder(getUtf8Decoder())],
    ['riskAssessment', getRiskAssessmentDecoder()],
    ['complianceOfficers', getArrayDecoder(getAddressDecoder())],
  ]);
}

export function getComplianceStatusCodec(): Codec<ComplianceStatusArgs, ComplianceStatus> {
  return combineCodec(getComplianceStatusEncoder(), getComplianceStatusDecoder());
}