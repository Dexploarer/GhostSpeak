/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getStructDecoder,
  getStructEncoder,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';


// Define ComplianceStatus enum
export enum ComplianceStatus {
  Pending = 0,
  Approved = 1,
  Rejected = 2,
  UnderReview = 3
}

export type ComplianceStatusArgs = ComplianceStatus;

// Define encoder/decoder for ComplianceStatus
import { getEnumEncoder, getEnumDecoder } from '@solana/kit';

export function getComplianceStatusEncoder(): Encoder<ComplianceStatusArgs> {
  return getEnumEncoder(ComplianceStatus);
}

export function getComplianceStatusDecoder(): Decoder<ComplianceStatus> {
  return getEnumDecoder(ComplianceStatus);
}

export type ComplianceStatusExport = { data: ComplianceStatus };

export type ComplianceStatusExportArgs = { data: ComplianceStatusArgs };

export function getComplianceStatusExportEncoder(): Encoder<ComplianceStatusExportArgs> {
  return getStructEncoder([['data', getComplianceStatusEncoder()]]);
}

export function getComplianceStatusExportDecoder(): Decoder<ComplianceStatusExport> {
  return getStructDecoder([['data', getComplianceStatusDecoder()]]);
}

export function getComplianceStatusExportCodec(): Codec<
  ComplianceStatusExportArgs,
  ComplianceStatusExport
> {
  return combineCodec(
    getComplianceStatusExportEncoder(),
    getComplianceStatusExportDecoder()
  );
}
