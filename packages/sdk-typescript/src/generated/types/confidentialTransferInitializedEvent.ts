/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getBooleanDecoder,
  getBooleanEncoder,
  getI64Decoder,
  getI64Encoder,
  getStructDecoder,
  getStructEncoder,
  type Address,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
} from '@solana/kit';

export type ConfidentialTransferInitializedEvent = {
  mint: Address;
  authority: Address;
  autoApproveNewAccounts: boolean;
  auditorConfigured: boolean;
  timestamp: bigint;
};

export type ConfidentialTransferInitializedEventArgs = {
  mint: Address;
  authority: Address;
  autoApproveNewAccounts: boolean;
  auditorConfigured: boolean;
  timestamp: number | bigint;
};

export function getConfidentialTransferInitializedEventEncoder(): FixedSizeEncoder<ConfidentialTransferInitializedEventArgs> {
  return getStructEncoder([
    ['mint', getAddressEncoder()],
    ['authority', getAddressEncoder()],
    ['autoApproveNewAccounts', getBooleanEncoder()],
    ['auditorConfigured', getBooleanEncoder()],
    ['timestamp', getI64Encoder()],
  ]);
}

export function getConfidentialTransferInitializedEventDecoder(): FixedSizeDecoder<ConfidentialTransferInitializedEvent> {
  return getStructDecoder([
    ['mint', getAddressDecoder()],
    ['authority', getAddressDecoder()],
    ['autoApproveNewAccounts', getBooleanDecoder()],
    ['auditorConfigured', getBooleanDecoder()],
    ['timestamp', getI64Decoder()],
  ]);
}

export function getConfidentialTransferInitializedEventCodec(): FixedSizeCodec<
  ConfidentialTransferInitializedEventArgs,
  ConfidentialTransferInitializedEvent
> {
  return combineCodec(
    getConfidentialTransferInitializedEventEncoder(),
    getConfidentialTransferInitializedEventDecoder()
  );
}
