/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  getUtf8Decoder,
  getUtf8Encoder,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';
import {
  getConstraintOperatorDecoder,
  getConstraintOperatorEncoder,
  getValueTypeDecoder,
  getValueTypeEncoder,
  type ConstraintOperator,
  type ConstraintOperatorArgs,
  type ValueType,
  type ValueTypeArgs,
} from '.';

/** Constraint condition definition */
export type ConstraintCondition = {
  /** Attribute name */
  attribute: string;
  /** Condition operator */
  operator: ConstraintOperator;
  /** Expected value */
  value: string;
  /** Value type */
  valueType: ValueType;
};

export type ConstraintConditionArgs = {
  /** Attribute name */
  attribute: string;
  /** Condition operator */
  operator: ConstraintOperatorArgs;
  /** Expected value */
  value: string;
  /** Value type */
  valueType: ValueTypeArgs;
};

export function getConstraintConditionEncoder(): Encoder<ConstraintConditionArgs> {
  return getStructEncoder([
    ['attribute', addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())],
    ['operator', getConstraintOperatorEncoder()],
    ['value', addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())],
    ['valueType', getValueTypeEncoder()],
  ]);
}

export function getConstraintConditionDecoder(): Decoder<ConstraintCondition> {
  return getStructDecoder([
    ['attribute', addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())],
    ['operator', getConstraintOperatorDecoder()],
    ['value', addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())],
    ['valueType', getValueTypeDecoder()],
  ]);
}

export function getConstraintConditionCodec(): Codec<
  ConstraintConditionArgs,
  ConstraintCondition
> {
  return combineCodec(
    getConstraintConditionEncoder(),
    getConstraintConditionDecoder()
  );
}
