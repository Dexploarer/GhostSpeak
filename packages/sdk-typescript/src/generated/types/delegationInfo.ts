import {
  combineCodec,
  type Codec,
  type Decoder,
  type Encoder
} from '@solana/codecs-core';
import {
  getI64Decoder,
  getI64Encoder
} from '@solana/codecs-numbers';
import {
  getStructDecoder,
  getStructEncoder
} from '@solana/codecs-data-structures';
import {
  getOptionDecoder,
  getOptionEncoder,
  type Option,
  type OptionOrNullable
} from '@solana/options';
import {
  getAddressDecoder,
  getAddressEncoder,
  type Address
} from '@solana/addresses';
import {
  getDelegationScopeDecoder,
  getDelegationScopeEncoder,
  type DelegationScope,
  type DelegationScopeArgs,
} from '.';
/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

/** Vote delegation information */
export type DelegationInfo = {
  /** Original delegator */
  delegator: Address;
  /** Delegation timestamp */
  delegatedAt: bigint;
  /** Delegation scope */
  scope: DelegationScope;
  /** Delegation expiry */
  expiresAt: Option<bigint>;
};

export type DelegationInfoArgs = {
  /** Original delegator */
  delegator: Address;
  /** Delegation timestamp */
  delegatedAt: number | bigint;
  /** Delegation scope */
  scope: DelegationScopeArgs;
  /** Delegation expiry */
  expiresAt: OptionOrNullable<number | bigint>;
};

export function getDelegationInfoEncoder(): Encoder<DelegationInfoArgs> {
  return getStructEncoder([
    ['delegator', getAddressEncoder()],
    ['delegatedAt', getI64Encoder()],
    ['scope', getDelegationScopeEncoder()],
    ['expiresAt', getOptionEncoder(getI64Encoder())],
  ]);
}

export function getDelegationInfoDecoder(): Decoder<DelegationInfo> {
  return getStructDecoder([
    ['delegator', getAddressDecoder()],
    ['delegatedAt', getI64Decoder()],
    ['scope', getDelegationScopeDecoder()],
    ['expiresAt', getOptionDecoder(getI64Decoder())],
  ]);
}

export function getDelegationInfoCodec(): Codec<
  DelegationInfoArgs,
  DelegationInfo
> {
  return combineCodec(getDelegationInfoEncoder(), getDelegationInfoDecoder());
}
