/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getBooleanDecoder,
  getBooleanEncoder,
  getI64Decoder,
  getI64Encoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  getUtf8Decoder,
  getUtf8Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';

export interface DisputeEvidence {
  submitter: Address;
  evidenceType: string;
  evidenceData: string;
  timestamp: bigint;
  isVerified: boolean;
}

export interface DisputeEvidenceArgs {
  submitter: Address;
  evidenceType: string;
  evidenceData: string;
  timestamp: number | bigint;
  isVerified: boolean;
}

export function getDisputeEvidenceEncoder(): Encoder<DisputeEvidenceArgs> {
  return getStructEncoder([
    ['submitter', getAddressEncoder()],
    ['evidenceType', addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())],
    ['evidenceData', addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())],
    ['timestamp', getI64Encoder()],
    ['isVerified', getBooleanEncoder()],
  ]);
}

export function getDisputeEvidenceDecoder(): Decoder<DisputeEvidence> {
  return getStructDecoder([
    ['submitter', getAddressDecoder()],
    ['evidenceType', addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())],
    ['evidenceData', addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())],
    ['timestamp', getI64Decoder()],
    ['isVerified', getBooleanDecoder()],
  ]);
}

export function getDisputeEvidenceCodec(): Codec<
  DisputeEvidenceArgs,
  DisputeEvidence
> {
  return combineCodec(getDisputeEvidenceEncoder(), getDisputeEvidenceDecoder());
}
