import {
  combineCodec,
  type Codec,
  type Decoder,
  type Encoder
} from '@solana/codecs-core';
import {
  getU32Decoder,
  getU32Encoder
} from '@solana/codecs-numbers';
import {
  getStructDecoder,
  getStructEncoder
} from '@solana/codecs-data-structures';
import {
  getAddressDecoder,
  getAddressEncoder,
  type Address
} from '@solana/addresses';
/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

export type DisputeEvidenceSubmittedEvent = {
  dispute: Address;
  submitter: Address;
  evidenceCount: number;
};

export type DisputeEvidenceSubmittedEventArgs = DisputeEvidenceSubmittedEvent;

export function getDisputeEvidenceSubmittedEventEncoder(): Encoder<DisputeEvidenceSubmittedEventArgs> {
  return getStructEncoder([
    ['dispute', getAddressEncoder()],
    ['submitter', getAddressEncoder()],
    ['evidenceCount', getU32Encoder()],
  ]);
}

export function getDisputeEvidenceSubmittedEventDecoder(): Decoder<DisputeEvidenceSubmittedEvent> {
  return getStructDecoder([
    ['dispute', getAddressDecoder()],
    ['submitter', getAddressDecoder()],
    ['evidenceCount', getU32Decoder()],
  ]);
}

export function getDisputeEvidenceSubmittedEventCodec(): Codec<
  DisputeEvidenceSubmittedEventArgs,
  DisputeEvidenceSubmittedEvent
> {
  return combineCodec(
    getDisputeEvidenceSubmittedEventEncoder(),
    getDisputeEvidenceSubmittedEventDecoder()
  );
}
