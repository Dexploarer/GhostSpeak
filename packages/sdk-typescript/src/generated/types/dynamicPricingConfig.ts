import {
  combineCodec,
  type Codec,
  type Decoder,
  type Encoder
} from '@solana/codecs-core';
import {
  getU64Decoder,
  getU64Encoder
} from '@solana/codecs-numbers';
import {
  getStructDecoder,
  getStructEncoder
} from '@solana/codecs-data-structures';
import {
  getPricingAlgorithmDecoder,
  getPricingAlgorithmEncoder,
  type PricingAlgorithm,
  type PricingAlgorithmArgs,
} from '.';
/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

export type DynamicPricingConfig = {
  algorithm: PricingAlgorithm;
  basePrice: bigint;
  minPrice: bigint;
  maxPrice: bigint;
  priceAdjustmentFactor: bigint;
  demandMultiplier: bigint;
  supplyMultiplier: bigint;
  timeDecayFactor: bigint;
  updateFrequency: bigint;
};

export type DynamicPricingConfigArgs = {
  algorithm: PricingAlgorithmArgs;
  basePrice: number | bigint;
  minPrice: number | bigint;
  maxPrice: number | bigint;
  priceAdjustmentFactor: number | bigint;
  demandMultiplier: number | bigint;
  supplyMultiplier: number | bigint;
  timeDecayFactor: number | bigint;
  updateFrequency: number | bigint;
};

export function getDynamicPricingConfigEncoder(): Encoder<DynamicPricingConfigArgs> {
  return getStructEncoder([
    ['algorithm', getPricingAlgorithmEncoder()],
    ['basePrice', getU64Encoder()],
    ['minPrice', getU64Encoder()],
    ['maxPrice', getU64Encoder()],
    ['priceAdjustmentFactor', getU64Encoder()],
    ['demandMultiplier', getU64Encoder()],
    ['supplyMultiplier', getU64Encoder()],
    ['timeDecayFactor', getU64Encoder()],
    ['updateFrequency', getU64Encoder()],
  ]);
}

export function getDynamicPricingConfigDecoder(): Decoder<DynamicPricingConfig> {
  return getStructDecoder([
    ['algorithm', getPricingAlgorithmDecoder()],
    ['basePrice', getU64Decoder()],
    ['minPrice', getU64Decoder()],
    ['maxPrice', getU64Decoder()],
    ['priceAdjustmentFactor', getU64Decoder()],
    ['demandMultiplier', getU64Decoder()],
    ['supplyMultiplier', getU64Decoder()],
    ['timeDecayFactor', getU64Decoder()],
    ['updateFrequency', getU64Decoder()],
  ]);
}

export function getDynamicPricingConfigCodec(): Codec<DynamicPricingConfigArgs, DynamicPricingConfig> {
  return combineCodec(getDynamicPricingConfigEncoder(), getDynamicPricingConfigDecoder());
}