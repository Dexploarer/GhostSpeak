/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getF64Decoder,
  getF64Encoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  type Address,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
} from '@solana/kit';

export type DynamicPricingUpdatedEvent = {
  engine: Address;
  agent: Address;
  owner: Address;
  newPrice: bigint;
  demandMultiplier: number;
  supplyMultiplier: number;
};

export type DynamicPricingUpdatedEventArgs = {
  engine: Address;
  agent: Address;
  owner: Address;
  newPrice: number | bigint;
  demandMultiplier: number;
  supplyMultiplier: number;
};

export function getDynamicPricingUpdatedEventEncoder(): FixedSizeEncoder<DynamicPricingUpdatedEventArgs> {
  return getStructEncoder([
    ['engine', getAddressEncoder()],
    ['agent', getAddressEncoder()],
    ['owner', getAddressEncoder()],
    ['newPrice', getU64Encoder()],
    ['demandMultiplier', getF64Encoder()],
    ['supplyMultiplier', getF64Encoder()],
  ]);
}

export function getDynamicPricingUpdatedEventDecoder(): FixedSizeDecoder<DynamicPricingUpdatedEvent> {
  return getStructDecoder([
    ['engine', getAddressDecoder()],
    ['agent', getAddressDecoder()],
    ['owner', getAddressDecoder()],
    ['newPrice', getU64Decoder()],
    ['demandMultiplier', getF64Decoder()],
    ['supplyMultiplier', getF64Decoder()],
  ]);
}

export function getDynamicPricingUpdatedEventCodec(): FixedSizeCodec<
  DynamicPricingUpdatedEventArgs,
  DynamicPricingUpdatedEvent
> {
  return combineCodec(
    getDynamicPricingUpdatedEventEncoder(),
    getDynamicPricingUpdatedEventDecoder()
  );
}
