import {
  combineCodec,
  type Codec,
  type Decoder,
  type Encoder
} from '@solana/codecs-core';
import {
  getEnumDecoder,
  getEnumEncoder
} from '@solana/codecs-data-structures';
/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

/** Enforcement levels for constraints */
export enum EnforcementLevel {
  Hard,
  Soft,
  Advisory,
  ExceptionBased,
}

export type EnforcementLevelArgs = EnforcementLevel;

export function getEnforcementLevelEncoder(): Encoder<EnforcementLevelArgs> {
  return getEnumEncoder(EnforcementLevel);
}

export function getEnforcementLevelDecoder(): Decoder<EnforcementLevel> {
  return getEnumDecoder(EnforcementLevel);
}

export function getEnforcementLevelCodec(): Codec<
  EnforcementLevelArgs,
  EnforcementLevel
> {
  return combineCodec(
    getEnforcementLevelEncoder(),
    getEnforcementLevelDecoder()
  );
}
