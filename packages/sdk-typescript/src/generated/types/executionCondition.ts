/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  getBooleanDecoder,
  getBooleanEncoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  getU64Decoder,
  getU64Encoder,
  getUtf8Decoder,
  getUtf8Encoder,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';
import {
  getConditionTypeDecoder,
  getConditionTypeEncoder,
  type ConditionType,
  type ConditionTypeArgs,
} from '.';

/** Execution conditions for transactions */
export type ExecutionCondition = {
  /** Condition type */
  conditionType: ConditionType;
  /** Target value/threshold */
  targetValue: bigint;
  /** Current value */
  currentValue: bigint;
  /** Condition met */
  met: boolean;
  /** Condition description */
  description: string;
};

export type ExecutionConditionArgs = {
  /** Condition type */
  conditionType: ConditionTypeArgs;
  /** Target value/threshold */
  targetValue: number | bigint;
  /** Current value */
  currentValue: number | bigint;
  /** Condition met */
  met: boolean;
  /** Condition description */
  description: string;
};

export function getExecutionConditionEncoder(): Encoder<ExecutionConditionArgs> {
  return getStructEncoder([
    ['conditionType', getConditionTypeEncoder()],
    ['targetValue', getU64Encoder()],
    ['currentValue', getU64Encoder()],
    ['met', getBooleanEncoder()],
    ['description', addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())],
  ]);
}

export function getExecutionConditionDecoder(): Decoder<ExecutionCondition> {
  return getStructDecoder([
    ['conditionType', getConditionTypeDecoder()],
    ['targetValue', getU64Decoder()],
    ['currentValue', getU64Decoder()],
    ['met', getBooleanDecoder()],
    ['description', addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())],
  ]);
}

export function getExecutionConditionCodec(): Codec<
  ExecutionConditionArgs,
  ExecutionCondition
> {
  return combineCodec(
    getExecutionConditionEncoder(),
    getExecutionConditionDecoder()
  );
}
