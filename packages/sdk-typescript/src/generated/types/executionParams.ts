/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getArrayDecoder,
  getArrayEncoder,
  getBooleanDecoder,
  getBooleanEncoder,
  getI64Decoder,
  getI64Encoder,
  getStructDecoder,
  getStructEncoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';
import {
  getExecutionConditionDecoder,
  getExecutionConditionEncoder,
  getProposalInstructionDecoder,
  getProposalInstructionEncoder,
  type ExecutionCondition,
  type ExecutionConditionArgs,
  type ProposalInstruction,
  type ProposalInstructionArgs,
} from '.';

/** Execution parameters for proposals */
export type ExecutionParams = {
  /** Instructions to execute if passed */
  instructions: Array<ProposalInstruction>;
  /** Time delay before execution */
  executionDelay: bigint;
  /** Execution conditions */
  executionConditions: Array<ExecutionCondition>;
  /** Can be cancelled after approval */
  cancellable: boolean;
  /** Automatic execution enabled */
  autoExecute: boolean;
  /** Required execution authority */
  executionAuthority: Address;
};

export type ExecutionParamsArgs = {
  /** Instructions to execute if passed */
  instructions: Array<ProposalInstructionArgs>;
  /** Time delay before execution */
  executionDelay: number | bigint;
  /** Execution conditions */
  executionConditions: Array<ExecutionConditionArgs>;
  /** Can be cancelled after approval */
  cancellable: boolean;
  /** Automatic execution enabled */
  autoExecute: boolean;
  /** Required execution authority */
  executionAuthority: Address;
};

export function getExecutionParamsEncoder(): Encoder<ExecutionParamsArgs> {
  return getStructEncoder([
    ['instructions', getArrayEncoder(getProposalInstructionEncoder())],
    ['executionDelay', getI64Encoder()],
    ['executionConditions', getArrayEncoder(getExecutionConditionEncoder())],
    ['cancellable', getBooleanEncoder()],
    ['autoExecute', getBooleanEncoder()],
    ['executionAuthority', getAddressEncoder()],
  ]);
}

export function getExecutionParamsDecoder(): Decoder<ExecutionParams> {
  return getStructDecoder([
    ['instructions', getArrayDecoder(getProposalInstructionDecoder())],
    ['executionDelay', getI64Decoder()],
    ['executionConditions', getArrayDecoder(getExecutionConditionDecoder())],
    ['cancellable', getBooleanDecoder()],
    ['autoExecute', getBooleanDecoder()],
    ['executionAuthority', getAddressDecoder()],
  ]);
}

export function getExecutionParamsCodec(): Codec<
  ExecutionParamsArgs,
  ExecutionParams
> {
  return combineCodec(getExecutionParamsEncoder(), getExecutionParamsDecoder());
}
