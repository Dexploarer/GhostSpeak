/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getI64Decoder,
  getI64Encoder,
  getStructDecoder,
  getStructEncoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';

export type ExtensionApprovedEvent = {
  extension: Address;
  developer: Address;
  authority: Address;
  timestamp: bigint;
};

export type ExtensionApprovedEventArgs = {
  extension: Address;
  developer: Address;
  authority: Address;
  timestamp: number | bigint;
};

export function getExtensionApprovedEventEncoder(): Encoder<ExtensionApprovedEventArgs> {
  return getStructEncoder([
    ['extension', getAddressEncoder()],
    ['developer', getAddressEncoder()],
    ['authority', getAddressEncoder()],
    ['timestamp', getI64Encoder()],
  ]);
}

export function getExtensionApprovedEventDecoder(): Decoder<ExtensionApprovedEvent> {
  return getStructDecoder([
    ['extension', getAddressDecoder()],
    ['developer', getAddressDecoder()],
    ['authority', getAddressDecoder()],
    ['timestamp', getI64Decoder()],
  ]);
}

export function getExtensionApprovedEventCodec(): Codec<
  ExtensionApprovedEventArgs,
  ExtensionApprovedEvent
> {
  return combineCodec(
    getExtensionApprovedEventEncoder(),
    getExtensionApprovedEventDecoder()
  );
}
