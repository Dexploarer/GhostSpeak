/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getStructDecoder,
  getStructEncoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';
import {
  getExtensionTypeDecoder,
  getExtensionTypeEncoder,
  type ExtensionType,
  type ExtensionTypeArgs,
} from '.';

export type ExtensionRegisteredEvent = {
  extension: Address;
  developer: Address;
  extensionType: ExtensionType;
};

export type ExtensionRegisteredEventArgs = {
  extension: Address;
  developer: Address;
  extensionType: ExtensionTypeArgs;
};

export function getExtensionRegisteredEventEncoder(): Encoder<ExtensionRegisteredEventArgs> {
  return getStructEncoder([
    ['extension', getAddressEncoder()],
    ['developer', getAddressEncoder()],
    ['extensionType', getExtensionTypeEncoder()],
  ]);
}

export function getExtensionRegisteredEventDecoder(): Decoder<ExtensionRegisteredEvent> {
  return getStructDecoder([
    ['extension', getAddressDecoder()],
    ['developer', getAddressDecoder()],
    ['extensionType', getExtensionTypeDecoder()],
  ]);
}

export function getExtensionRegisteredEventCodec(): Codec<
  ExtensionRegisteredEventArgs,
  ExtensionRegisteredEvent
> {
  return combineCodec(
    getExtensionRegisteredEventEncoder(),
    getExtensionRegisteredEventDecoder()
  );
}
