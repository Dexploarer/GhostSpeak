/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getF64Decoder,
  getF64Encoder,
  getStructDecoder,
  getStructEncoder,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';

/** Latitude range for geographic constraints */
export interface LatitudeRange {
  /** Minimum latitude */
  min: number;
  /** Maximum latitude */
  max: number;
}

export type LatitudeRangeArgs = LatitudeRange;

export function getLatitudeRangeEncoder(): Encoder<LatitudeRangeArgs> {
  return getStructEncoder([
    ['min', getF64Encoder()],
    ['max', getF64Encoder()],
  ]);
}

export function getLatitudeRangeDecoder(): Decoder<LatitudeRange> {
  return getStructDecoder([
    ['min', getF64Decoder()],
    ['max', getF64Decoder()],
  ]);
}

export function getLatitudeRangeCodec(): Codec<
  LatitudeRangeArgs,
  LatitudeRange
> {
  return combineCodec(getLatitudeRangeEncoder(), getLatitudeRangeDecoder());
}
