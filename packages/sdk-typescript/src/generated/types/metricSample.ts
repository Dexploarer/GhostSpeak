/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  getI64Decoder,
  getI64Encoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  getU64Decoder,
  getU64Encoder,
  getUtf8Decoder,
  getUtf8Encoder,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';

export type MetricSample = {
  timestamp: bigint;
  value: bigint;
  metricType: string;
};

export type MetricSampleArgs = {
  timestamp: number | bigint;
  value: number | bigint;
  metricType: string;
};

export function getMetricSampleEncoder(): Encoder<MetricSampleArgs> {
  return getStructEncoder([
    ['timestamp', getI64Encoder()],
    ['value', getU64Encoder()],
    ['metricType', addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())],
  ]);
}

export function getMetricSampleDecoder(): Decoder<MetricSample> {
  return getStructDecoder([
    ['timestamp', getI64Decoder()],
    ['value', getU64Decoder()],
    ['metricType', addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())],
  ]);
}

export function getMetricSampleCodec(): Codec<MetricSampleArgs, MetricSample> {
  return combineCodec(getMetricSampleEncoder(), getMetricSampleDecoder());
}
