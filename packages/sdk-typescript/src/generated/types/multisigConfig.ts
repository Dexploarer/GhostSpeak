/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getArrayDecoder,
  getArrayEncoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  getU8Decoder,
  getU8Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';
import {
  getAddressDecoder,
  getAddressEncoder,
} from '@solana/kit';

/** Multisig configuration */
export type MultisigConfig = {
  /** Signature threshold */
  threshold: number;
  /** Owner addresses */
  owners: Array<Address>;
  /** Current nonce */
  nonce: bigint;
};

export type MultisigConfigArgs = {
  /** Signature threshold */
  threshold: number;
  /** Owner addresses */
  owners: Array<Address>;
  /** Current nonce */
  nonce: number | bigint;
};

export function getMultisigConfigEncoder(): Encoder<MultisigConfigArgs> {
  return getStructEncoder([
    ['threshold', getU8Encoder()],
    ['owners', getArrayEncoder(getAddressEncoder())],
    ['nonce', getU64Encoder()],
  ]);
}

export function getMultisigConfigDecoder(): Decoder<MultisigConfig> {
  return getStructDecoder([
    ['threshold', getU8Decoder()],
    ['owners', getArrayDecoder(getAddressDecoder())],
    ['nonce', getU64Decoder()],
  ]);
}

export function getMultisigConfigCodec(): Codec<MultisigConfigArgs, MultisigConfig> {
  return combineCodec(getMultisigConfigEncoder(), getMultisigConfigDecoder());
}