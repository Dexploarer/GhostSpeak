import {
  combineCodec,
  type Codec,
  type Decoder,
  type Encoder
} from '@solana/codecs-core';
import {
  getU64Decoder,
  getU64Encoder,
  getU8Decoder,
  getU8Encoder
} from '@solana/codecs-numbers';
import {
  getStructDecoder,
  getStructEncoder
} from '@solana/codecs-data-structures';
import {
  getAddressDecoder,
  getAddressEncoder,
  type Address
} from '@solana/addresses';
/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

export type MultisigCreatedEvent = {
  multisig: Address;
  multisigId: bigint;
  owner: Address;
  threshold: number;
  signersCount: number;
};

export type MultisigCreatedEventArgs = {
  multisig: Address;
  multisigId: number | bigint;
  owner: Address;
  threshold: number;
  signersCount: number;
};

export function getMultisigCreatedEventEncoder(): Encoder<MultisigCreatedEventArgs> {
  return getStructEncoder([
    ['multisig', getAddressEncoder()],
    ['multisigId', getU64Encoder()],
    ['owner', getAddressEncoder()],
    ['threshold', getU8Encoder()],
    ['signersCount', getU8Encoder()],
  ]);
}

export function getMultisigCreatedEventDecoder(): Decoder<MultisigCreatedEvent> {
  return getStructDecoder([
    ['multisig', getAddressDecoder()],
    ['multisigId', getU64Decoder()],
    ['owner', getAddressDecoder()],
    ['threshold', getU8Decoder()],
    ['signersCount', getU8Decoder()],
  ]);
}

export function getMultisigCreatedEventCodec(): Codec<
  MultisigCreatedEventArgs,
  MultisigCreatedEvent
> {
  return combineCodec(
    getMultisigCreatedEventEncoder(),
    getMultisigCreatedEventDecoder()
  );
}
