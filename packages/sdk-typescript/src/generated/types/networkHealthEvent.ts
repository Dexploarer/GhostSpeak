/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getI64Decoder,
  getI64Encoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  getU64Decoder,
  getU64Encoder,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
} from '@solana/kit';

export type NetworkHealthEvent = {
  activeAgents: number;
  transactionThroughput: bigint;
  averageLatency: bigint;
  errorRate: number;
  timestamp: bigint;
};

export type NetworkHealthEventArgs = {
  activeAgents: number;
  transactionThroughput: number | bigint;
  averageLatency: number | bigint;
  errorRate: number;
  timestamp: number | bigint;
};

export function getNetworkHealthEventEncoder(): FixedSizeEncoder<NetworkHealthEventArgs> {
  return getStructEncoder([
    ['activeAgents', getU32Encoder()],
    ['transactionThroughput', getU64Encoder()],
    ['averageLatency', getU64Encoder()],
    ['errorRate', getU32Encoder()],
    ['timestamp', getI64Encoder()],
  ]);
}

export function getNetworkHealthEventDecoder(): FixedSizeDecoder<NetworkHealthEvent> {
  return getStructDecoder([
    ['activeAgents', getU32Decoder()],
    ['transactionThroughput', getU64Decoder()],
    ['averageLatency', getU64Decoder()],
    ['errorRate', getU32Decoder()],
    ['timestamp', getI64Decoder()],
  ]);
}

export function getNetworkHealthEventCodec(): FixedSizeCodec<
  NetworkHealthEventArgs,
  NetworkHealthEvent
> {
  return combineCodec(
    getNetworkHealthEventEncoder(),
    getNetworkHealthEventDecoder()
  );
}
