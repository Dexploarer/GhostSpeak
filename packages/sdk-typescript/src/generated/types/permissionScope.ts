import {
  combineCodec,
  type Codec,
  type Decoder,
  type Encoder
} from '@solana/codecs-core';
import {
  getBooleanDecoder,
  getBooleanEncoder,
  getStructDecoder,
  getStructEncoder
} from '@solana/codecs-data-structures';
import {
  getScopeBoundariesDecoder,
  getScopeBoundariesEncoder,
  getScopeTypeDecoder,
  getScopeTypeEncoder,
  type ScopeBoundaries,
  type ScopeBoundariesArgs,
  type ScopeType,
  type ScopeTypeArgs,
} from '.';
/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

/** Permission scope definition */
export type PermissionScope = {
  /** Scope type */
  scopeType: ScopeType;
  /** Scope boundaries */
  boundaries: ScopeBoundaries;
  /** Hierarchical scope */
  hierarchical: boolean;
  /** Inherited permissions */
  inherited: boolean;
};

export type PermissionScopeArgs = {
  /** Scope type */
  scopeType: ScopeTypeArgs;
  /** Scope boundaries */
  boundaries: ScopeBoundariesArgs;
  /** Hierarchical scope */
  hierarchical: boolean;
  /** Inherited permissions */
  inherited: boolean;
};

export function getPermissionScopeEncoder(): Encoder<PermissionScopeArgs> {
  return getStructEncoder([
    ['scopeType', getScopeTypeEncoder()],
    ['boundaries', getScopeBoundariesEncoder()],
    ['hierarchical', getBooleanEncoder()],
    ['inherited', getBooleanEncoder()],
  ]);
}

export function getPermissionScopeDecoder(): Decoder<PermissionScope> {
  return getStructDecoder([
    ['scopeType', getScopeTypeDecoder()],
    ['boundaries', getScopeBoundariesDecoder()],
    ['hierarchical', getBooleanDecoder()],
    ['inherited', getBooleanDecoder()],
  ]);
}

export function getPermissionScopeCodec(): Codec<
  PermissionScopeArgs,
  PermissionScope
> {
  return combineCodec(getPermissionScopeEncoder(), getPermissionScopeDecoder());
}
