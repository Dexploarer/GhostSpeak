/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  getArrayDecoder,
  getArrayEncoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  getUtf8Decoder,
  getUtf8Encoder,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';
import {
  getComplianceMetricsDecoder,
  getComplianceMetricsEncoder,
  getReportEntryDecoder,
  getReportEntryEncoder,
  getReportSummaryDecoder,
  getReportSummaryEncoder,
  getRiskIndicatorDecoder,
  getRiskIndicatorEncoder,
  type ComplianceMetrics,
  type ComplianceMetricsArgs,
  type ReportEntry,
  type ReportEntryArgs,
  type ReportSummary,
  type ReportSummaryArgs,
  type RiskIndicator,
  type RiskIndicatorArgs,
} from '.';

/** Report data container */
export interface ReportData {
  /** Summary statistics */
  summary: ReportSummary;
  /** Detailed entries */
  entries: ReportEntry[];
  /** Compliance metrics */
  complianceMetrics: ComplianceMetrics;
  /** Risk indicators */
  riskIndicators: RiskIndicator[];
  /** Recommendations */
  recommendations: string[];
}

export interface ReportDataArgs {
  /** Summary statistics */
  summary: ReportSummaryArgs;
  /** Detailed entries */
  entries: ReportEntryArgs[];
  /** Compliance metrics */
  complianceMetrics: ComplianceMetricsArgs;
  /** Risk indicators */
  riskIndicators: RiskIndicatorArgs[];
  /** Recommendations */
  recommendations: string[];
}

export function getReportDataEncoder(): Encoder<ReportDataArgs> {
  return getStructEncoder([
    ['summary', getReportSummaryEncoder()],
    ['entries', getArrayEncoder(getReportEntryEncoder())],
    ['complianceMetrics', getComplianceMetricsEncoder()],
    ['riskIndicators', getArrayEncoder(getRiskIndicatorEncoder())],
    [
      'recommendations',
      getArrayEncoder(addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())),
    ],
  ]);
}

export function getReportDataDecoder(): Decoder<ReportData> {
  return getStructDecoder([
    ['summary', getReportSummaryDecoder()],
    ['entries', getArrayDecoder(getReportEntryDecoder())],
    ['complianceMetrics', getComplianceMetricsDecoder()],
    ['riskIndicators', getArrayDecoder(getRiskIndicatorDecoder())],
    [
      'recommendations',
      getArrayDecoder(addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())),
    ],
  ]);
}

export function getReportDataCodec(): Codec<ReportDataArgs, ReportData> {
  return combineCodec(getReportDataEncoder(), getReportDataDecoder());
}
