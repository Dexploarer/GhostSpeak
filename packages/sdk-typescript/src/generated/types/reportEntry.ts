import {
  combineCodec,
  type Codec,
  type Decoder,
  type Encoder
} from '@solana/codecs-core';
import {
  getUtf8Decoder,
  getUtf8Encoder
} from '@solana/codecs-strings';
import {
  getI64Decoder,
  getI64Encoder,
  getU64Decoder,
  getU64Encoder,
  getU8Decoder,
  getU8Encoder
} from '@solana/codecs-numbers';
import {
  getArrayDecoder,
  getArrayEncoder,
  getStructDecoder,
  getStructEncoder
} from '@solana/codecs-data-structures';
import {
  getComplianceFlagsDecoder,
  getComplianceFlagsEncoder,
  getRiskIndicatorDecoder,
  getRiskIndicatorEncoder,
  type ComplianceFlags,
  type ComplianceFlagsArgs,
  type RiskIndicator,
  type RiskIndicatorArgs,
} from '.';
/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

export type ReportEntry = {
  /** Entry timestamp */
  timestamp: bigint;
  /** Transaction ID */
  transactionId: bigint;
  /** Transaction amount */
  amount: bigint;
  /** Risk score */
  riskScore: number;
  /** Compliance flags */
  complianceFlags: ComplianceFlags;
  /** Risk indicators */
  riskIndicators: Array<RiskIndicator>;
  /** Anomalies detected */
  anomalies: Array<string>;
  /** Actions taken */
  actionsTaken: Array<string>;
};

export type ReportEntryArgs = {
  /** Entry timestamp */
  timestamp: number | bigint;
  /** Transaction ID */
  transactionId: number | bigint;
  /** Transaction amount */
  amount: number | bigint;
  /** Risk score */
  riskScore: number;
  /** Compliance flags */
  complianceFlags: ComplianceFlagsArgs;
  /** Risk indicators */
  riskIndicators: Array<RiskIndicatorArgs>;
  /** Anomalies detected */
  anomalies: Array<string>;
  /** Actions taken */
  actionsTaken: Array<string>;
};

export function getReportEntryEncoder(): Encoder<ReportEntryArgs> {
  return getStructEncoder([
    ['timestamp', getI64Encoder()],
    ['transactionId', getU64Encoder()],
    ['amount', getU64Encoder()],
    ['riskScore', getU8Encoder()],
    ['complianceFlags', getComplianceFlagsEncoder()],
    ['riskIndicators', getArrayEncoder(getRiskIndicatorEncoder())],
    ['anomalies', getArrayEncoder(getUtf8Encoder())],
    ['actionsTaken', getArrayEncoder(getUtf8Encoder())],
  ]);
}

export function getReportEntryDecoder(): Decoder<ReportEntry> {
  return getStructDecoder([
    ['timestamp', getI64Decoder()],
    ['transactionId', getU64Decoder()],
    ['amount', getU64Decoder()],
    ['riskScore', getU8Decoder()],
    ['complianceFlags', getComplianceFlagsDecoder()],
    ['riskIndicators', getArrayDecoder(getRiskIndicatorDecoder())],
    ['anomalies', getArrayDecoder(getUtf8Decoder())],
    ['actionsTaken', getArrayDecoder(getUtf8Decoder())],
  ]);
}

export function getReportEntryCodec(): Codec<ReportEntryArgs, ReportEntry> {
  return combineCodec(getReportEntryEncoder(), getReportEntryDecoder());
}