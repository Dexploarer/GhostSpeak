/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getArrayDecoder,
  getArrayEncoder,
  getOptionDecoder,
  getOptionEncoder,
  getUtf8Decoder,
  getUtf8Encoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  getU64Decoder,
  getU64Encoder,
  type Codec,
  type Decoder,
  type Encoder,
  type Option,
  type OptionOrNullable,
} from '@solana/kit';

export interface ResourceConstraints {
  /** Maximum operations per hour */
  maxOperationsPerHour: Option<number>;
  /** Maximum data size (bytes) */
  maxDataSize: Option<bigint>;
  /** Maximum transaction value */
  maxTransactionValue: Option<bigint>;
  /** Allowed resource types */
  allowedResourceTypes: string[];
  /** Blocked resource patterns */
  blockedResourcePatterns: string[];
  /** Quota reset period (seconds) */
  quotaResetPeriod: Option<bigint>;
}

export interface ResourceConstraintsArgs {
  /** Maximum operations per hour */
  maxOperationsPerHour: OptionOrNullable<number>;
  /** Maximum data size (bytes) */
  maxDataSize: OptionOrNullable<number | bigint>;
  /** Maximum transaction value */
  maxTransactionValue: OptionOrNullable<number | bigint>;
  /** Allowed resource types */
  allowedResourceTypes: string[];
  /** Blocked resource patterns */
  blockedResourcePatterns: string[];
  /** Quota reset period (seconds) */
  quotaResetPeriod: OptionOrNullable<number | bigint>;
}

export function getResourceConstraintsEncoder(): Encoder<ResourceConstraintsArgs> {
  return getStructEncoder([
    ['maxOperationsPerHour', getOptionEncoder(getU32Encoder())],
    ['maxDataSize', getOptionEncoder(getU64Encoder())],
    ['maxTransactionValue', getOptionEncoder(getU64Encoder())],
    ['allowedResourceTypes', getArrayEncoder(getUtf8Encoder())],
    ['blockedResourcePatterns', getArrayEncoder(getUtf8Encoder())],
    ['quotaResetPeriod', getOptionEncoder(getU64Encoder())],
  ]);
}

export function getResourceConstraintsDecoder(): Decoder<ResourceConstraints> {
  return getStructDecoder([
    ['maxOperationsPerHour', getOptionDecoder(getU32Decoder())],
    ['maxDataSize', getOptionDecoder(getU64Decoder())],
    ['maxTransactionValue', getOptionDecoder(getU64Decoder())],
    ['allowedResourceTypes', getArrayDecoder(getUtf8Decoder())],
    ['blockedResourcePatterns', getArrayDecoder(getUtf8Decoder())],
    ['quotaResetPeriod', getOptionDecoder(getU64Decoder())],
  ]);
}

export function getResourceConstraintsCodec(): Codec<ResourceConstraintsArgs, ResourceConstraints> {
  return combineCodec(getResourceConstraintsEncoder(), getResourceConstraintsDecoder());
}