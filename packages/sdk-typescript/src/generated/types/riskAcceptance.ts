/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getBooleanDecoder,
  getBooleanEncoder,
  getI64Decoder,
  getI64Encoder,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  getUtf8Decoder,
  getUtf8Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
  type Option,
  type OptionOrNullable,
} from '@solana/kit';

/** Risk acceptance status */
export interface RiskAcceptance {
  /** Risk accepted */
  accepted: boolean;
  /** Accepting authority */
  acceptingAuthority: Option<Address>;
  /** Acceptance date */
  acceptanceDate: Option<bigint>;
  /** Acceptance reasoning */
  reasoning: Option<string>;
  /** Review date */
  reviewDate: Option<bigint>;
}

export interface RiskAcceptanceArgs {
  /** Risk accepted */
  accepted: boolean;
  /** Accepting authority */
  acceptingAuthority: OptionOrNullable<Address>;
  /** Acceptance date */
  acceptanceDate: OptionOrNullable<number | bigint>;
  /** Acceptance reasoning */
  reasoning: OptionOrNullable<string>;
  /** Review date */
  reviewDate: OptionOrNullable<number | bigint>;
}

export function getRiskAcceptanceEncoder(): Encoder<RiskAcceptanceArgs> {
  return getStructEncoder([
    ['accepted', getBooleanEncoder()],
    ['acceptingAuthority', getOptionEncoder(getAddressEncoder())],
    ['acceptanceDate', getOptionEncoder(getI64Encoder())],
    [
      'reasoning',
      getOptionEncoder(addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())),
    ],
    ['reviewDate', getOptionEncoder(getI64Encoder())],
  ]);
}

export function getRiskAcceptanceDecoder(): Decoder<RiskAcceptance> {
  return getStructDecoder([
    ['accepted', getBooleanDecoder()],
    ['acceptingAuthority', getOptionDecoder(getAddressDecoder())],
    ['acceptanceDate', getOptionDecoder(getI64Decoder())],
    [
      'reasoning',
      getOptionDecoder(addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())),
    ],
    ['reviewDate', getOptionDecoder(getI64Decoder())],
  ]);
}

export function getRiskAcceptanceCodec(): Codec<
  RiskAcceptanceArgs,
  RiskAcceptance
> {
  return combineCodec(getRiskAcceptanceEncoder(), getRiskAcceptanceDecoder());
}
