/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  getU8Decoder,
  getU8Encoder,
  getUtf8Decoder,
  getUtf8Encoder,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';
import {
  getRiskCategoryDecoder,
  getRiskCategoryEncoder,
  type RiskCategory,
  type RiskCategoryArgs,
} from '.';

/** Individual risk factor */
export type RiskFactor = {
  /** Factor name */
  name: string;
  /** Factor category */
  category: RiskCategory;
  /** Impact score */
  impact: number;
  /** Likelihood score */
  likelihood: number;
  /** Risk score */
  riskScore: number;
};

export type RiskFactorArgs = {
  /** Factor name */
  name: string;
  /** Factor category */
  category: RiskCategoryArgs;
  /** Impact score */
  impact: number;
  /** Likelihood score */
  likelihood: number;
  /** Risk score */
  riskScore: number;
};

export function getRiskFactorEncoder(): Encoder<RiskFactorArgs> {
  return getStructEncoder([
    ['name', addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())],
    ['category', getRiskCategoryEncoder()],
    ['impact', getU8Encoder()],
    ['likelihood', getU8Encoder()],
    ['riskScore', getU8Encoder()],
  ]);
}

export function getRiskFactorDecoder(): Decoder<RiskFactor> {
  return getStructDecoder([
    ['name', addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())],
    ['category', getRiskCategoryDecoder()],
    ['impact', getU8Decoder()],
    ['likelihood', getU8Decoder()],
    ['riskScore', getU8Decoder()],
  ]);
}

export function getRiskFactorCodec(): Codec<RiskFactorArgs, RiskFactor> {
  return combineCodec(getRiskFactorEncoder(), getRiskFactorDecoder());
}
