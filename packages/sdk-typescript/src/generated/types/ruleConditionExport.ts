/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getStructDecoder,
  getStructEncoder,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';


// Define RuleCondition interface
export interface RuleCondition {
  // Properties defined by the IDL
  [key: string]: unknown;
}

export type RuleConditionArgs = RuleCondition;

// Define encoder/decoder for RuleCondition
export function getRuleConditionEncoder(): Encoder<RuleConditionArgs> {
  return getStructEncoder([]);
}

export function getRuleConditionDecoder(): Decoder<RuleCondition> {
  return getStructDecoder([]);
}

export type RuleConditionExport = { data: RuleCondition };

export type RuleConditionExportArgs = { data: RuleConditionArgs };

export function getRuleConditionExportEncoder(): Encoder<RuleConditionExportArgs> {
  return getStructEncoder([['data', getRuleConditionEncoder()]]);
}

export function getRuleConditionExportDecoder(): Decoder<RuleConditionExport> {
  return getStructDecoder([['data', getRuleConditionDecoder()]]);
}

export function getRuleConditionExportCodec(): Codec<
  RuleConditionExportArgs,
  RuleConditionExport
> {
  return combineCodec(
    getRuleConditionExportEncoder(),
    getRuleConditionExportDecoder()
  );
}
