/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getBooleanDecoder,
  getBooleanEncoder,
  getI64Decoder,
  getI64Encoder,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  getU64Decoder,
  getU64Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
  type Option,
  type OptionOrNullable,
} from '@solana/kit';

export type ServicePerformanceEvent = {
  service: Address;
  provider: Address;
  executionTime: bigint;
  success: boolean;
  qualityScore: Option<number>;
  timestamp: bigint;
};

export type ServicePerformanceEventArgs = {
  service: Address;
  provider: Address;
  executionTime: number | bigint;
  success: boolean;
  qualityScore: OptionOrNullable<number>;
  timestamp: number | bigint;
};

export function getServicePerformanceEventEncoder(): Encoder<ServicePerformanceEventArgs> {
  return getStructEncoder([
    ['service', getAddressEncoder()],
    ['provider', getAddressEncoder()],
    ['executionTime', getU64Encoder()],
    ['success', getBooleanEncoder()],
    ['qualityScore', getOptionEncoder(getU32Encoder())],
    ['timestamp', getI64Encoder()],
  ]);
}

export function getServicePerformanceEventDecoder(): Decoder<ServicePerformanceEvent> {
  return getStructDecoder([
    ['service', getAddressDecoder()],
    ['provider', getAddressDecoder()],
    ['executionTime', getU64Decoder()],
    ['success', getBooleanDecoder()],
    ['qualityScore', getOptionDecoder(getU32Decoder())],
    ['timestamp', getI64Decoder()],
  ]);
}

export function getServicePerformanceEventCodec(): Codec<
  ServicePerformanceEventArgs,
  ServicePerformanceEvent
> {
  return combineCodec(
    getServicePerformanceEventEncoder(),
    getServicePerformanceEventDecoder()
  );
}
