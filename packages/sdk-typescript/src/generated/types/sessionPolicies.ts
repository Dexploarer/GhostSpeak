import {
  combineCodec,
  type Codec,
  type Decoder,
  type Encoder
} from '@solana/codecs-core';
import {
  getI64Decoder,
  getI64Encoder,
  getU8Decoder,
  getU8Encoder
} from '@solana/codecs-numbers';
import {
  getStructDecoder,
  getStructEncoder
} from '@solana/codecs-data-structures';
/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

export type SessionPolicies = {
  maxSessionDuration: bigint;
  idleTimeout: bigint;
  concurrentSessions: number;
};

export type SessionPoliciesArgs = {
  maxSessionDuration: number | bigint;
  idleTimeout: number | bigint;
  concurrentSessions: number;
};

export function getSessionPoliciesEncoder(): Encoder<SessionPoliciesArgs> {
  return getStructEncoder([
    ['maxSessionDuration', getI64Encoder()],
    ['idleTimeout', getI64Encoder()],
    ['concurrentSessions', getU8Encoder()],
  ]);
}

export function getSessionPoliciesDecoder(): Decoder<SessionPolicies> {
  return getStructDecoder([
    ['maxSessionDuration', getI64Decoder()],
    ['idleTimeout', getI64Decoder()],
    ['concurrentSessions', getU8Decoder()],
  ]);
}

export function getSessionPoliciesCodec(): Codec<
  SessionPoliciesArgs,
  SessionPolicies
> {
  return combineCodec(getSessionPoliciesEncoder(), getSessionPoliciesDecoder());
}
