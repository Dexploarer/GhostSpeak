/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  getBooleanDecoder,
  getBooleanEncoder,
  getI64Decoder,
  getI64Encoder,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  getUtf8Decoder,
  getUtf8Encoder,
  type Codec,
  type Decoder,
  type Encoder,
  type Option,
  type OptionOrNullable,
} from '@solana/kit';

/** Submission details for regulatory reports */
export type SubmissionDetails = {
  /** Submission timestamp */
  submittedAt: bigint;
  /** Regulatory body */
  regulatoryBody: string;
  /** Submission reference */
  submissionReference: string;
  /** Acknowledgment received */
  acknowledged: boolean;
  /** Acknowledgment timestamp */
  acknowledgedAt: Option<bigint>;
  /** Response from regulatory body */
  regulatoryResponse: Option<string>;
};

export type SubmissionDetailsArgs = {
  /** Submission timestamp */
  submittedAt: number | bigint;
  /** Regulatory body */
  regulatoryBody: string;
  /** Submission reference */
  submissionReference: string;
  /** Acknowledgment received */
  acknowledged: boolean;
  /** Acknowledgment timestamp */
  acknowledgedAt: OptionOrNullable<number | bigint>;
  /** Response from regulatory body */
  regulatoryResponse: OptionOrNullable<string>;
};

export function getSubmissionDetailsEncoder(): Encoder<SubmissionDetailsArgs> {
  return getStructEncoder([
    ['submittedAt', getI64Encoder()],
    ['regulatoryBody', addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())],
    [
      'submissionReference',
      addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder()),
    ],
    ['acknowledged', getBooleanEncoder()],
    ['acknowledgedAt', getOptionEncoder(getI64Encoder())],
    [
      'regulatoryResponse',
      getOptionEncoder(addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())),
    ],
  ]);
}

export function getSubmissionDetailsDecoder(): Decoder<SubmissionDetails> {
  return getStructDecoder([
    ['submittedAt', getI64Decoder()],
    ['regulatoryBody', addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())],
    [
      'submissionReference',
      addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder()),
    ],
    ['acknowledged', getBooleanDecoder()],
    ['acknowledgedAt', getOptionDecoder(getI64Decoder())],
    [
      'regulatoryResponse',
      getOptionDecoder(addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())),
    ],
  ]);
}

export function getSubmissionDetailsCodec(): Codec<
  SubmissionDetailsArgs,
  SubmissionDetails
> {
  return combineCodec(
    getSubmissionDetailsEncoder(),
    getSubmissionDetailsDecoder()
  );
}
