/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getArrayDecoder,
  getArrayEncoder,
  getBooleanDecoder,
  getBooleanEncoder,
  getI64Decoder,
  getI64Encoder,
  getStructDecoder,
  getStructEncoder,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';
import {
  getExecutionConditionDecoder,
  getExecutionConditionEncoder,
  getTimeLockTypeDecoder,
  getTimeLockTypeEncoder,
  type ExecutionCondition,
  type ExecutionConditionArgs,
  type TimeLockType,
  type TimeLockTypeArgs,
} from '.';

/** Time lock mechanism for delayed execution */
export interface TimeLock {
  /** Lock duration in seconds */
  duration: bigint;
  /** Lock start timestamp */
  lockedAt: bigint;
  /** Unlock timestamp */
  unlocksAt: bigint;
  /** Early unlock conditions */
  earlyUnlockConditions: ExecutionCondition[];
  /** Lock type */
  lockType: TimeLockType;
  /** Can be cancelled before execution */
  cancellable: boolean;
}

export interface TimeLockArgs {
  /** Lock duration in seconds */
  duration: number | bigint;
  /** Lock start timestamp */
  lockedAt: number | bigint;
  /** Unlock timestamp */
  unlocksAt: number | bigint;
  /** Early unlock conditions */
  earlyUnlockConditions: ExecutionConditionArgs[];
  /** Lock type */
  lockType: TimeLockTypeArgs;
  /** Can be cancelled before execution */
  cancellable: boolean;
}

export function getTimeLockEncoder(): Encoder<TimeLockArgs> {
  return getStructEncoder([
    ['duration', getI64Encoder()],
    ['lockedAt', getI64Encoder()],
    ['unlocksAt', getI64Encoder()],
    ['earlyUnlockConditions', getArrayEncoder(getExecutionConditionEncoder())],
    ['lockType', getTimeLockTypeEncoder()],
    ['cancellable', getBooleanEncoder()],
  ]);
}

export function getTimeLockDecoder(): Decoder<TimeLock> {
  return getStructDecoder([
    ['duration', getI64Decoder()],
    ['lockedAt', getI64Decoder()],
    ['unlocksAt', getI64Decoder()],
    ['earlyUnlockConditions', getArrayDecoder(getExecutionConditionDecoder())],
    ['lockType', getTimeLockTypeDecoder()],
    ['cancellable', getBooleanDecoder()],
  ]);
}

export function getTimeLockCodec(): Codec<TimeLockArgs, TimeLock> {
  return combineCodec(getTimeLockEncoder(), getTimeLockDecoder());
}
