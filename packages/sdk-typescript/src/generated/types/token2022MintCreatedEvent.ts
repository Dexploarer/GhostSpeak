/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getI64Decoder,
  getI64Encoder,
  getStructDecoder,
  getStructEncoder,
  getU8Decoder,
  getU8Encoder,
  type Address,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
} from '@solana/kit';
import {
  getToken2022ExtensionsEnabledDecoder,
  getToken2022ExtensionsEnabledEncoder,
  type Token2022ExtensionsEnabled,
  type Token2022ExtensionsEnabledArgs,
} from '.';

export type Token2022MintCreatedEvent = {
  mint: Address;
  authority: Address;
  agent: Address;
  decimals: number;
  extensionsEnabled: Token2022ExtensionsEnabled;
  timestamp: bigint;
};

export type Token2022MintCreatedEventArgs = {
  mint: Address;
  authority: Address;
  agent: Address;
  decimals: number;
  extensionsEnabled: Token2022ExtensionsEnabledArgs;
  timestamp: number | bigint;
};

export function getToken2022MintCreatedEventEncoder(): FixedSizeEncoder<Token2022MintCreatedEventArgs> {
  return getStructEncoder([
    ['mint', getAddressEncoder()],
    ['authority', getAddressEncoder()],
    ['agent', getAddressEncoder()],
    ['decimals', getU8Encoder()],
    ['extensionsEnabled', getToken2022ExtensionsEnabledEncoder()],
    ['timestamp', getI64Encoder()],
  ]);
}

export function getToken2022MintCreatedEventDecoder(): FixedSizeDecoder<Token2022MintCreatedEvent> {
  return getStructDecoder([
    ['mint', getAddressDecoder()],
    ['authority', getAddressDecoder()],
    ['agent', getAddressDecoder()],
    ['decimals', getU8Decoder()],
    ['extensionsEnabled', getToken2022ExtensionsEnabledDecoder()],
    ['timestamp', getI64Decoder()],
  ]);
}

export function getToken2022MintCreatedEventCodec(): FixedSizeCodec<
  Token2022MintCreatedEventArgs,
  Token2022MintCreatedEvent
> {
  return combineCodec(
    getToken2022MintCreatedEventEncoder(),
    getToken2022MintCreatedEventDecoder()
  );
}
