/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getI64Decoder,
  getI64Encoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  getU64Decoder,
  getU64Encoder,
  getUtf8Decoder,
  getUtf8Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';

export type TransactionAnalyticsEvent = {
  transactionType: string;
  amount: bigint;
  from: Address;
  to: Address;
  status: string;
  timestamp: bigint;
  blockHeight: bigint;
};

export type TransactionAnalyticsEventArgs = {
  transactionType: string;
  amount: number | bigint;
  from: Address;
  to: Address;
  status: string;
  timestamp: number | bigint;
  blockHeight: number | bigint;
};

export function getTransactionAnalyticsEventEncoder(): Encoder<TransactionAnalyticsEventArgs> {
  return getStructEncoder([
    [
      'transactionType',
      addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder()),
    ],
    ['amount', getU64Encoder()],
    ['from', getAddressEncoder()],
    ['to', getAddressEncoder()],
    ['status', addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())],
    ['timestamp', getI64Encoder()],
    ['blockHeight', getU64Encoder()],
  ]);
}

export function getTransactionAnalyticsEventDecoder(): Decoder<TransactionAnalyticsEvent> {
  return getStructDecoder([
    [
      'transactionType',
      addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder()),
    ],
    ['amount', getU64Decoder()],
    ['from', getAddressDecoder()],
    ['to', getAddressDecoder()],
    ['status', addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())],
    ['timestamp', getI64Decoder()],
    ['blockHeight', getU64Decoder()],
  ]);
}

export function getTransactionAnalyticsEventCodec(): Codec<
  TransactionAnalyticsEventArgs,
  TransactionAnalyticsEvent
> {
  return combineCodec(
    getTransactionAnalyticsEventEncoder(),
    getTransactionAnalyticsEventDecoder()
  );
}
