/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getI64Decoder,
  getI64Encoder,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  getU16Decoder,
  getU16Encoder,
  getU64Decoder,
  getU64Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
  type Option,
  type OptionOrNullable,
} from '@solana/kit';

export type TransferFeeInitializedEvent = {
  mint: Address;
  authority: Address;
  transferFeeBasisPoints: number;
  maximumFee: bigint;
  transferFeeAuthority: Option<Address>;
  withdrawWithheldAuthority: Option<Address>;
  timestamp: bigint;
};

export type TransferFeeInitializedEventArgs = {
  mint: Address;
  authority: Address;
  transferFeeBasisPoints: number;
  maximumFee: number | bigint;
  transferFeeAuthority: OptionOrNullable<Address>;
  withdrawWithheldAuthority: OptionOrNullable<Address>;
  timestamp: number | bigint;
};

export function getTransferFeeInitializedEventEncoder(): Encoder<TransferFeeInitializedEventArgs> {
  return getStructEncoder([
    ['mint', getAddressEncoder()],
    ['authority', getAddressEncoder()],
    ['transferFeeBasisPoints', getU16Encoder()],
    ['maximumFee', getU64Encoder()],
    ['transferFeeAuthority', getOptionEncoder(getAddressEncoder())],
    ['withdrawWithheldAuthority', getOptionEncoder(getAddressEncoder())],
    ['timestamp', getI64Encoder()],
  ]);
}

export function getTransferFeeInitializedEventDecoder(): Decoder<TransferFeeInitializedEvent> {
  return getStructDecoder([
    ['mint', getAddressDecoder()],
    ['authority', getAddressDecoder()],
    ['transferFeeBasisPoints', getU16Decoder()],
    ['maximumFee', getU64Decoder()],
    ['transferFeeAuthority', getOptionDecoder(getAddressDecoder())],
    ['withdrawWithheldAuthority', getOptionDecoder(getAddressDecoder())],
    ['timestamp', getI64Decoder()],
  ]);
}

export function getTransferFeeInitializedEventCodec(): Codec<
  TransferFeeInitializedEventArgs,
  TransferFeeInitializedEvent
> {
  return combineCodec(
    getTransferFeeInitializedEventEncoder(),
    getTransferFeeInitializedEventDecoder()
  );
}
