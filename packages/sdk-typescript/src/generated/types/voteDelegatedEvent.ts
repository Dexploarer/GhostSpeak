/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getI64Decoder,
  getI64Encoder,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
  type Option,
  type OptionOrNullable,
} from '@solana/kit';
import {
  getDelegationScopeDecoder,
  getDelegationScopeEncoder,
  type DelegationScope,
  type DelegationScopeArgs,
} from '.';

export type VoteDelegatedEvent = {
  delegator: Address;
  delegate: Address;
  proposalId: bigint;
  scope: DelegationScope;
  votingPower: bigint;
  expiresAt: Option<bigint>;
  timestamp: bigint;
};

export type VoteDelegatedEventArgs = {
  delegator: Address;
  delegate: Address;
  proposalId: number | bigint;
  scope: DelegationScopeArgs;
  votingPower: number | bigint;
  expiresAt: OptionOrNullable<number | bigint>;
  timestamp: number | bigint;
};

export function getVoteDelegatedEventEncoder(): Encoder<VoteDelegatedEventArgs> {
  return getStructEncoder([
    ['delegator', getAddressEncoder()],
    ['delegate', getAddressEncoder()],
    ['proposalId', getU64Encoder()],
    ['scope', getDelegationScopeEncoder()],
    ['votingPower', getU64Encoder()],
    ['expiresAt', getOptionEncoder(getI64Encoder())],
    ['timestamp', getI64Encoder()],
  ]);
}

export function getVoteDelegatedEventDecoder(): Decoder<VoteDelegatedEvent> {
  return getStructDecoder([
    ['delegator', getAddressDecoder()],
    ['delegate', getAddressDecoder()],
    ['proposalId', getU64Decoder()],
    ['scope', getDelegationScopeDecoder()],
    ['votingPower', getU64Decoder()],
    ['expiresAt', getOptionDecoder(getI64Decoder())],
    ['timestamp', getI64Decoder()],
  ]);
}

export function getVoteDelegatedEventCodec(): Codec<
  VoteDelegatedEventArgs,
  VoteDelegatedEvent
> {
  return combineCodec(
    getVoteDelegatedEventEncoder(),
    getVoteDelegatedEventDecoder()
  );
}
