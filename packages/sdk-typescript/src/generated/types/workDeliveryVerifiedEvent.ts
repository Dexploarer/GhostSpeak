/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getI64Decoder,
  getI64Encoder,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  getUtf8Decoder,
  getUtf8Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
  type Option,
  type OptionOrNullable,
} from '@solana/kit';

export type WorkDeliveryVerifiedEvent = {
  workOrder: Address;
  client: Address;
  provider: Address;
  verificationNotes: Option<string>;
  timestamp: bigint;
};

export type WorkDeliveryVerifiedEventArgs = {
  workOrder: Address;
  client: Address;
  provider: Address;
  verificationNotes: OptionOrNullable<string>;
  timestamp: number | bigint;
};

export function getWorkDeliveryVerifiedEventEncoder(): Encoder<WorkDeliveryVerifiedEventArgs> {
  return getStructEncoder([
    ['workOrder', getAddressEncoder()],
    ['client', getAddressEncoder()],
    ['provider', getAddressEncoder()],
    [
      'verificationNotes',
      getOptionEncoder(addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())),
    ],
    ['timestamp', getI64Encoder()],
  ]);
}

export function getWorkDeliveryVerifiedEventDecoder(): Decoder<WorkDeliveryVerifiedEvent> {
  return getStructDecoder([
    ['workOrder', getAddressDecoder()],
    ['client', getAddressDecoder()],
    ['provider', getAddressDecoder()],
    [
      'verificationNotes',
      getOptionDecoder(addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())),
    ],
    ['timestamp', getI64Decoder()],
  ]);
}

export function getWorkDeliveryVerifiedEventCodec(): Codec<
  WorkDeliveryVerifiedEventArgs,
  WorkDeliveryVerifiedEvent
> {
  return combineCodec(
    getWorkDeliveryVerifiedEventEncoder(),
    getWorkDeliveryVerifiedEventDecoder()
  );
}
